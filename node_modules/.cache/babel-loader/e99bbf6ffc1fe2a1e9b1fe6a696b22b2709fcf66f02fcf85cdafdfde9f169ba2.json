{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nexport const useForm = (initialState, callBack) => {\n  _s();\n  const [fields, setFields] = useState(initialState);\n  useEffect(() => {\n    if (callBack) callBack(fields);\n  }, [fields]);\n  const MAX_CHARS_PER_LINE = 100;\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    const field = target.name;\n    let value = target.type === 'number' ? +target.value || '' : target.value;\n\n    // split the value into an array of substrings with a maximum length of MAX_CHARS_PER_LINE\n    const substrings = value.match(new RegExp(`.{1,${MAX_CHARS_PER_LINE}}`, 'g'));\n\n    // join the substrings with a newline character\n    value = substrings.join('\\n');\n    setFields(prevFields => ({\n      ...prevFields,\n      [field]: value\n    }));\n  };\n  return [fields, handleChange, setFields];\n};\n_s(useForm, \"gPzKw+oj0a4HgloJ+ocjTIIOaI8=\");","map":{"version":3,"names":["useEffect","useState","useForm","initialState","callBack","fields","setFields","MAX_CHARS_PER_LINE","handleChange","target","field","name","value","type","substrings","match","RegExp","join","prevFields"],"sources":["C:/bloomin/bloomin/src/hooks/useForm.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport const useForm = (initialState, callBack) => {\r\n  const [fields, setFields] = useState(initialState)\r\n\r\n  useEffect(() => {\r\n    if (callBack) callBack(fields)\r\n  }, [fields])\r\n\r\n  const MAX_CHARS_PER_LINE = 100;\r\n\r\n  const handleChange = ({ target }) => {\r\n    const field = target.name;\r\n    let value = target.type === 'number' ? +target.value || '' : target.value;\r\n  \r\n    // split the value into an array of substrings with a maximum length of MAX_CHARS_PER_LINE\r\n    const substrings = value.match(new RegExp(`.{1,${MAX_CHARS_PER_LINE}}`, 'g'));\r\n  \r\n    // join the substrings with a newline character\r\n    value = substrings.join('\\n');\r\n  \r\n    setFields((prevFields) => ({ ...prevFields, [field]: value }));\r\n  }\r\n  \r\n\r\n  return [fields, handleChange, setFields]\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,MAAMC,OAAO,GAAG,CAACC,YAAY,EAAEC,QAAQ,KAAK;EAAA;EACjD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAACE,YAAY,CAAC;EAElDH,SAAS,CAAC,MAAM;IACd,IAAII,QAAQ,EAAEA,QAAQ,CAACC,MAAM,CAAC;EAChC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,MAAME,kBAAkB,GAAG,GAAG;EAE9B,MAAMC,YAAY,GAAG,QAAgB;IAAA,IAAf;MAAEC;IAAO,CAAC;IAC9B,MAAMC,KAAK,GAAGD,MAAM,CAACE,IAAI;IACzB,IAAIC,KAAK,GAAGH,MAAM,CAACI,IAAI,KAAK,QAAQ,GAAG,CAACJ,MAAM,CAACG,KAAK,IAAI,EAAE,GAAGH,MAAM,CAACG,KAAK;;IAEzE;IACA,MAAME,UAAU,GAAGF,KAAK,CAACG,KAAK,CAAC,IAAIC,MAAM,CAAE,OAAMT,kBAAmB,GAAE,EAAE,GAAG,CAAC,CAAC;;IAE7E;IACAK,KAAK,GAAGE,UAAU,CAACG,IAAI,CAAC,IAAI,CAAC;IAE7BX,SAAS,CAAEY,UAAU,KAAM;MAAE,GAAGA,UAAU;MAAE,CAACR,KAAK,GAAGE;IAAM,CAAC,CAAC,CAAC;EAChE,CAAC;EAGD,OAAO,CAACP,MAAM,EAAEG,YAAY,EAAEF,SAAS,CAAC;AAC1C,CAAC;AAAA,GAxBYJ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}