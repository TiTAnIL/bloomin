{"ast":null,"code":"export const storageService = {\n  query,\n  get,\n  post,\n  put,\n  remove,\n  postMany\n};\nfunction query(entityType) {\n  let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 600;\n  var entities = JSON.parse(localStorage.getItem(entityType)) || [];\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(entities);\n    }, delay);\n  });\n  // return Promise.resolve(entities)\n}\n\nfunction get(entityType, entityId) {\n  return query(entityType).then(entities => {\n    // console.log(entities.map(entity => entity._id === entityId))\n    // console.log(entities.map(entity => entity))\n    // console.log(entities.find(entity => entity._id === entityId))\n    return entities.find(entity => entity._id === entityId);\n  });\n}\nfunction post(entityType, newEntity) {\n  newEntity._id = newEntity._id || _makeId();\n  console.log(newEntity._id);\n  return query(entityType).then(entities => {\n    entities.unshift(newEntity);\n    _save(entityType, entities);\n    return newEntity;\n  });\n}\nfunction put(entityType, updatedEntity) {\n  return query(entityType).then(entities => {\n    const idx = entities.findIndex(entity => entity._id === updatedEntity._id);\n    entities.splice(idx, 1, updatedEntity);\n    _save(entityType, entities);\n    return updatedEntity;\n  });\n}\nfunction remove(entityType, entityId) {\n  return query(entityType).then(entities => {\n    const idx = entities.findIndex(entity => entity._id === entityId);\n    entities.splice(idx, 1);\n    _save(entityType, entities);\n  });\n}\nfunction _save(entityType, entities) {\n  localStorage.setItem(entityType, JSON.stringify(entities));\n}\nfunction postMany(entityType, newNetities) {\n  console.log('postmany activate');\n  return query(entityType, newNetities).then(entities => {\n    newNetities = newNetities.map(entity => ({\n      ...entity,\n      _id: entity._id ? entity._id : _makeId()\n    }));\n    entities.push(...newNetities);\n    _save(entityType, entities);\n    return entities;\n  });\n}\nfunction _makeId() {\n  let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n  console.log('makeID activateds');\n  var text = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (var i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}","map":{"version":3,"names":["storageService","query","get","post","put","remove","postMany","entityType","delay","entities","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","entityId","then","find","entity","_id","newEntity","_makeId","console","log","unshift","_save","updatedEntity","idx","findIndex","splice","setItem","stringify","newNetities","map","push","length","text","possible","i","charAt","Math","floor","random"],"sources":["C:/bloomin/bloomin/src/services/async-storage.service.js"],"sourcesContent":["export const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    postMany\r\n}\r\n\r\nfunction query(entityType, delay = 600) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(entities)\r\n        }, delay)\r\n    })\r\n    // return Promise.resolve(entities)\r\n}\r\n\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            // console.log(entities.map(entity => entity._id === entityId))\r\n            // console.log(entities.map(entity => entity))\r\n            // console.log(entities.find(entity => entity._id === entityId))\r\n            return entities.find(entity => entity._id === entityId)\r\n        })\r\n}\r\n\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = newEntity._id || _makeId()\r\n    console.log(newEntity._id)\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.unshift(newEntity)\r\n            _save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            _save(entityType, entities)\r\n        })\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\n\r\nfunction postMany(entityType, newNetities) {\r\n    console.log('postmany activate')\r\n    return query(entityType, newNetities)\r\n        .then(entities => {\r\n            newNetities = newNetities.map(entity => ({ ...entity, _id: (entity._id) ? entity._id : _makeId() }))\r\n            entities.push(...newNetities)\r\n            _save(entityType, entities)\r\n            return entities\r\n        })\r\n}\r\n\r\n\r\nfunction _makeId(length = 5) {\r\n    console.log('makeID activateds')\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}