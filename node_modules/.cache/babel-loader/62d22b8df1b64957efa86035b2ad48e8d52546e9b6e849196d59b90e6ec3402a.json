{"ast":null,"code":"const INITIAL_STATE = {\n  plants: [],\n  filterBy: {},\n  isLoading: true\n};\nexport function plantReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SET_PLANTS':\n      return {\n        ...state,\n        plants: action.plants\n      };\n    case 'ADD_PLANT':\n      return {\n        ...state,\n        plants: [...state.plants, action.plant]\n      };\n    case 'REMOVE_PLANT':\n      return {\n        ...state,\n        plants: state.plants.filter(plant => plant._id !== action.plantId)\n      };\n    case 'UPDATE_PLANT':\n      return {\n        ...state,\n        plants: state.plants.map(plant => plant._id === action.plant._id ? action.plant : plant)\n      };\n    case 'SET_FILTER_BY':\n      return {\n        ...state,\n        filterBy: {\n          ...action.filterBy\n        }\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.isLoading\n      };\n      break;\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["INITIAL_STATE","plants","filterBy","isLoading","plantReducer","state","action","type","plant","filter","_id","plantId","map"],"sources":["C:/bloomin/bloomin/src/store/reducers/plant.reducer.js"],"sourcesContent":["\r\nconst INITIAL_STATE = {\r\n    plants: [],\r\n    filterBy: {},\r\n    isLoading: true\r\n}\r\n\r\n\r\nexport function plantReducer(state = INITIAL_STATE, action) {\r\n\r\n    switch (action.type) {\r\n        case 'SET_PLANTS':\r\n            return {\r\n                ...state,\r\n                plants: action.plants\r\n            }\r\n\r\n        case 'ADD_PLANT':\r\n            return {\r\n                ...state,\r\n                plants: [...state.plants, action.plant]\r\n            }\r\n\r\n        case 'REMOVE_PLANT':\r\n            return {\r\n                ...state,\r\n                plants: state.plants.filter(plant => plant._id !== action.plantId)\r\n            }\r\n\r\n        case 'UPDATE_PLANT':\r\n            return {\r\n                ...state,\r\n                plants: state.plants.map(plant => plant._id === action.plant._id ? action.plant : plant)\r\n            }\r\n\r\n        case 'SET_FILTER_BY':\r\n            return {\r\n                ...state,\r\n                filterBy: { ...action.filterBy }\r\n            }\r\n        case 'SET_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n            break\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AACA,MAAMA,aAAa,GAAG;EAClBC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE,CAAC,CAAC;EACZC,SAAS,EAAE;AACf,CAAC;AAGD,OAAO,SAASC,YAAY,GAAgC;EAAA,IAA/BC,KAAK,uEAAGL,aAAa;EAAA,IAAEM,MAAM;EAEtD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,YAAY;MACb,OAAO;QACH,GAAGF,KAAK;QACRJ,MAAM,EAAEK,MAAM,CAACL;MACnB,CAAC;IAEL,KAAK,WAAW;MACZ,OAAO;QACH,GAAGI,KAAK;QACRJ,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAM,EAAEK,MAAM,CAACE,KAAK;MAC1C,CAAC;IAEL,KAAK,cAAc;MACf,OAAO;QACH,GAAGH,KAAK;QACRJ,MAAM,EAAEI,KAAK,CAACJ,MAAM,CAACQ,MAAM,CAACD,KAAK,IAAIA,KAAK,CAACE,GAAG,KAAKJ,MAAM,CAACK,OAAO;MACrE,CAAC;IAEL,KAAK,cAAc;MACf,OAAO;QACH,GAAGN,KAAK;QACRJ,MAAM,EAAEI,KAAK,CAACJ,MAAM,CAACW,GAAG,CAACJ,KAAK,IAAIA,KAAK,CAACE,GAAG,KAAKJ,MAAM,CAACE,KAAK,CAACE,GAAG,GAAGJ,MAAM,CAACE,KAAK,GAAGA,KAAK;MAC3F,CAAC;IAEL,KAAK,eAAe;MAChB,OAAO;QACH,GAAGH,KAAK;QACRH,QAAQ,EAAE;UAAE,GAAGI,MAAM,CAACJ;QAAS;MACnC,CAAC;IACL,KAAK,aAAa;MACd,OAAO;QACH,GAAGG,KAAK;QACRF,SAAS,EAAEG,MAAM,CAACH;MACtB,CAAC;MACD;IACJ;MACI,OAAOE,KAAK;EAAC;AAEzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}