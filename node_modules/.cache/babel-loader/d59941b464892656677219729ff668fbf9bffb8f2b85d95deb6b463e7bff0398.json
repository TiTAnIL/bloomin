{"ast":null,"code":"import { storageService } from \"./async-storage.service.js\";\nimport { utilService } from './util.service.js';\nimport { store } from '../store/index';\n\n// import { userService } from './user.service.js'\nimport { getActionRemoveItem, getActionAddItem, getActionUpdateItem } from '../store/actions/cart.actions.js';\nconst STORAGE_KEY = 'cart';\nconst cartChannel = new BroadcastChannel('cartChannel')\n\n// import axios from \"axios\"\n;\n\n(() => {\n  cartChannel.addEventListener('message', ev => {\n    store.dispatch(ev.data);\n  });\n})();\nexport const cartService = {\n  query,\n  getById,\n  save,\n  remove,\n  getEmptyOrder\n};\nwindow.cs = cartService;\nasync function query() {\n  return storageService.query(STORAGE_KEY);\n}\nasync function remove(itemId) {\n  console.log(itemId);\n  await storageService.remove(STORAGE_KEY, itemId);\n  cartChannel.postMessage(getActionRemoveItem(itemId));\n}\nasync function save(item) {\n  var savedCart;\n  console.log('item,', item);\n  // if (item._id) {\n  // savedCart = await storageService.put(STORAGE_KEY, item)\n  // cartChannel.postMessage(getActionUpdateItem(savedCart))\n  // } else {\n  // TODO: owner is set by the beckend\n  // plant.owner = userService.getLoggedinUser()\n  savedCart = await storageService.post(STORAGE_KEY, item);\n  cartChannel.postMessage(getActionAddItem(savedCart));\n  // }\n  return savedCart;\n}\nfunction getById(id) {\n  return storageService.get(STORAGE_KEY, id);\n}\nfunction getEmptyOrder() {\n  return {\n    vendor: 'Susita-' + Date.now() % 1000,\n    price: utilService.getRandomIntInclusive(1000, 9000)\n  };\n}\nconst demoData = [];","map":{"version":3,"names":["storageService","utilService","store","getActionRemoveItem","getActionAddItem","getActionUpdateItem","STORAGE_KEY","cartChannel","BroadcastChannel","addEventListener","ev","dispatch","data","cartService","query","getById","save","remove","getEmptyOrder","window","cs","itemId","console","log","postMessage","item","savedCart","post","id","get","vendor","Date","now","price","getRandomIntInclusive","demoData"],"sources":["C:/bloomin/bloomin/src/services/cart.service.js"],"sourcesContent":["import { storageService } from \"./async-storage.service.js\"\r\nimport { utilService } from './util.service.js'\r\nimport { store } from '../store/index'\r\n\r\n// import { userService } from './user.service.js'\r\nimport {\r\n    getActionRemoveItem,\r\n    getActionAddItem,\r\n    getActionUpdateItem,\r\n} from '../store/actions/cart.actions.js'\r\n\r\nconst STORAGE_KEY = 'cart'\r\nconst cartChannel = new BroadcastChannel('cartChannel')\r\n\r\n    // import axios from \"axios\"\r\n\r\n    ; (() => {\r\n        cartChannel.addEventListener('message', (ev) => {\r\n            store.dispatch(ev.data)\r\n        })\r\n    })()\r\n\r\n\r\n\r\nexport const cartService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    getEmptyOrder,\r\n}\r\nwindow.cs = cartService\r\n\r\nasync function query() {\r\n    return storageService.query(STORAGE_KEY)\r\n}\r\n\r\nasync function remove(itemId) {\r\n    console.log(itemId)\r\n    await storageService.remove(STORAGE_KEY, itemId)\r\n    cartChannel.postMessage(getActionRemoveItem(itemId))\r\n}\r\n\r\nasync function save(item) {\r\n    var savedCart\r\n    console.log('item,', item)\r\n    // if (item._id) {\r\n    // savedCart = await storageService.put(STORAGE_KEY, item)\r\n    // cartChannel.postMessage(getActionUpdateItem(savedCart))\r\n    // } else {\r\n    // TODO: owner is set by the beckend\r\n    // plant.owner = userService.getLoggedinUser()\r\n    savedCart = await storageService.post(STORAGE_KEY, item)\r\n    cartChannel.postMessage(getActionAddItem(savedCart))\r\n    // }\r\n    return savedCart\r\n}\r\n\r\nfunction getById(id) {\r\n    return storageService.get(STORAGE_KEY, id)\r\n}\r\n\r\nfunction getEmptyOrder() {\r\n    return {\r\n        vendor: 'Susita-' + (Date.now() % 1000),\r\n        price: utilService.getRandomIntInclusive(1000, 9000),\r\n    }\r\n}\r\n\r\nconst demoData = []"],"mappings":"AAAA,SAASA,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA,SACIC,mBAAmB,EACnBC,gBAAgB,EAChBC,mBAAmB,QAChB,kCAAkC;AAEzC,MAAMC,WAAW,GAAG,MAAM;AAC1B,MAAMC,WAAW,GAAG,IAAIC,gBAAgB,CAAC,aAAa;;AAElD;AAAA;;AAEE,CAAC,MAAM;EACLD,WAAW,CAACE,gBAAgB,CAAC,SAAS,EAAGC,EAAE,IAAK;IAC5CR,KAAK,CAACS,QAAQ,CAACD,EAAE,CAACE,IAAI,CAAC;EAC3B,CAAC,CAAC;AACN,CAAC,GAAG;AAIR,OAAO,MAAMC,WAAW,GAAG;EACvBC,KAAK;EACLC,OAAO;EACPC,IAAI;EACJC,MAAM;EACNC;AACJ,CAAC;AACDC,MAAM,CAACC,EAAE,GAAGP,WAAW;AAEvB,eAAeC,KAAK,GAAG;EACnB,OAAOd,cAAc,CAACc,KAAK,CAACR,WAAW,CAAC;AAC5C;AAEA,eAAeW,MAAM,CAACI,MAAM,EAAE;EAC1BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAMrB,cAAc,CAACiB,MAAM,CAACX,WAAW,EAAEe,MAAM,CAAC;EAChDd,WAAW,CAACiB,WAAW,CAACrB,mBAAmB,CAACkB,MAAM,CAAC,CAAC;AACxD;AAEA,eAAeL,IAAI,CAACS,IAAI,EAAE;EACtB,IAAIC,SAAS;EACbJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,IAAI,CAAC;EAC1B;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,GAAG,MAAM1B,cAAc,CAAC2B,IAAI,CAACrB,WAAW,EAAEmB,IAAI,CAAC;EACxDlB,WAAW,CAACiB,WAAW,CAACpB,gBAAgB,CAACsB,SAAS,CAAC,CAAC;EACpD;EACA,OAAOA,SAAS;AACpB;AAEA,SAASX,OAAO,CAACa,EAAE,EAAE;EACjB,OAAO5B,cAAc,CAAC6B,GAAG,CAACvB,WAAW,EAAEsB,EAAE,CAAC;AAC9C;AAEA,SAASV,aAAa,GAAG;EACrB,OAAO;IACHY,MAAM,EAAE,SAAS,GAAIC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAK;IACvCC,KAAK,EAAEhC,WAAW,CAACiC,qBAAqB,CAAC,IAAI,EAAE,IAAI;EACvD,CAAC;AACL;AAEA,MAAMC,QAAQ,GAAG,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}