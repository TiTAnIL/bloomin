[{"C:\\bloomin\\frontend\\src\\index.js":"1","C:\\bloomin\\frontend\\src\\root-cmp.jsx":"2","C:\\bloomin\\frontend\\src\\store\\index.js":"3","C:\\bloomin\\frontend\\src\\routes.js":"4","C:\\bloomin\\frontend\\src\\cmps\\app-footer.jsx":"5","C:\\bloomin\\frontend\\src\\cmps\\app-header.jsx":"6","C:\\bloomin\\frontend\\src\\store\\reducers\\vase.reducer.js":"7","C:\\bloomin\\frontend\\src\\store\\reducers\\cart.reducer.js":"8","C:\\bloomin\\frontend\\src\\store\\reducers\\accessory.reducer.js":"9","C:\\bloomin\\frontend\\src\\store\\reducers\\plant.reducer.js":"10","C:\\bloomin\\frontend\\src\\store\\reducers\\user.reducer.js":"11","C:\\bloomin\\frontend\\src\\views\\cart.jsx":"12","C:\\bloomin\\frontend\\src\\views\\shop.jsx":"13","C:\\bloomin\\frontend\\src\\views\\bloom-app.jsx":"14","C:\\bloomin\\frontend\\src\\views\\contact.jsx":"15","C:\\bloomin\\frontend\\src\\views\\match.jsx":"16","C:\\bloomin\\frontend\\src\\views\\about.jsx":"17","C:\\bloomin\\frontend\\src\\views\\plant-details.jsx":"18","C:\\bloomin\\frontend\\src\\views\\plant-edit.jsx":"19","C:\\bloomin\\frontend\\src\\cmps\\cartTotal.jsx":"20","C:\\bloomin\\frontend\\src\\services\\event-bus.service.js":"21","C:\\bloomin\\frontend\\src\\store\\actions\\plant.actions.js":"22","C:\\bloomin\\frontend\\src\\services\\plant.service.js":"23","C:\\bloomin\\frontend\\src\\services\\util.service.js":"24","C:\\bloomin\\frontend\\src\\store\\actions\\cart.actions.js":"25","C:\\bloomin\\frontend\\src\\cmps\\accessories.jsx":"26","C:\\bloomin\\frontend\\src\\cmps\\cart-summary.jsx":"27","C:\\bloomin\\frontend\\src\\cmps\\plants-list.jsx":"28","C:\\bloomin\\frontend\\src\\cmps\\PlantCarousel.jsx":"29","C:\\bloomin\\frontend\\src\\cmps\\search-filter.jsx":"30","C:\\bloomin\\frontend\\src\\cmps\\vases.jsx":"31","C:\\bloomin\\frontend\\src\\cmps\\details-FAQ.jsx":"32","C:\\bloomin\\frontend\\src\\hooks\\useForm.js":"33","C:\\bloomin\\frontend\\src\\services\\async-storage.service.js":"34","C:\\bloomin\\frontend\\src\\services\\cart.service.js":"35","C:\\bloomin\\frontend\\src\\store\\actions\\accessory.actions.js":"36","C:\\bloomin\\frontend\\src\\store\\actions\\vase.actions.js":"37","C:\\bloomin\\frontend\\src\\cmps\\plant-preview.jsx":"38","C:\\bloomin\\frontend\\src\\services\\accessories.service.js":"39","C:\\bloomin\\frontend\\src\\services\\vase.service.js":"40","C:\\bloomin\\frontend\\src\\services\\http.service.js":"41"},{"size":743,"mtime":1683439896361,"results":"42","hashOfConfig":"43"},{"size":684,"mtime":1683439896361,"results":"44","hashOfConfig":"43"},{"size":796,"mtime":1686395704647,"results":"45","hashOfConfig":"43"},{"size":1163,"mtime":1695044628312,"results":"46","hashOfConfig":"43"},{"size":2531,"mtime":1683439896344,"results":"47","hashOfConfig":"43"},{"size":8278,"mtime":1695044504241,"results":"48","hashOfConfig":"43"},{"size":1239,"mtime":1683439896361,"results":"49","hashOfConfig":"43"},{"size":1548,"mtime":1689502960251,"results":"50","hashOfConfig":"43"},{"size":1380,"mtime":1683439896361,"results":"51","hashOfConfig":"43"},{"size":1204,"mtime":1683439896361,"results":"52","hashOfConfig":"43"},{"size":486,"mtime":1683439896361,"results":"53","hashOfConfig":"43"},{"size":5110,"mtime":1686395767663,"results":"54","hashOfConfig":"43"},{"size":6116,"mtime":1695044772629,"results":"55","hashOfConfig":"43"},{"size":5911,"mtime":1695125188478,"results":"56","hashOfConfig":"43"},{"size":152,"mtime":1683439896377,"results":"57","hashOfConfig":"43"},{"size":148,"mtime":1683439896377,"results":"58","hashOfConfig":"43"},{"size":1046,"mtime":1683439896361,"results":"59","hashOfConfig":"43"},{"size":3389,"mtime":1695127368231,"results":"60","hashOfConfig":"43"},{"size":9560,"mtime":1683439896377,"results":"61","hashOfConfig":"43"},{"size":525,"mtime":1683439896344,"results":"62","hashOfConfig":"43"},{"size":1285,"mtime":1683439896361,"results":"63","hashOfConfig":"43"},{"size":2195,"mtime":1694353422134,"results":"64","hashOfConfig":"43"},{"size":5250,"mtime":1695122258666,"results":"65","hashOfConfig":"43"},{"size":587,"mtime":1683439896361,"results":"66","hashOfConfig":"43"},{"size":2252,"mtime":1683439896361,"results":"67","hashOfConfig":"43"},{"size":1222,"mtime":1683439896344,"results":"68","hashOfConfig":"43"},{"size":1820,"mtime":1683439896344,"results":"69","hashOfConfig":"43"},{"size":554,"mtime":1683439896344,"results":"70","hashOfConfig":"43"},{"size":1376,"mtime":1683439896344,"results":"71","hashOfConfig":"43"},{"size":10280,"mtime":1695059398274,"results":"72","hashOfConfig":"43"},{"size":2206,"mtime":1683439896344,"results":"73","hashOfConfig":"43"},{"size":1195,"mtime":1683439896344,"results":"74","hashOfConfig":"43"},{"size":831,"mtime":1683439896344,"results":"75","hashOfConfig":"43"},{"size":2560,"mtime":1686922677321,"results":"76","hashOfConfig":"43"},{"size":1742,"mtime":1683439896361,"results":"77","hashOfConfig":"43"},{"size":959,"mtime":1683439896361,"results":"78","hashOfConfig":"43"},{"size":976,"mtime":1683439896361,"results":"79","hashOfConfig":"43"},{"size":1268,"mtime":1695121307863,"results":"80","hashOfConfig":"43"},{"size":2016,"mtime":1683439896361,"results":"81","hashOfConfig":"43"},{"size":3703,"mtime":1683439896361,"results":"82","hashOfConfig":"43"},{"size":1029,"mtime":1693218133721,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"tv4iyh",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"87"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"87"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"87"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"87"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"87"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"87"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"87"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"87"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"87"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"87"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"87"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"87"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"87"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"87"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"87"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"C:\\bloomin\\frontend\\src\\index.js",[],[],[],"C:\\bloomin\\frontend\\src\\root-cmp.jsx",["229"],[],"import React, { useCallback } from 'react'\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport routes from './routes'\r\n\r\nimport { AppFooter } from './cmps/app-footer';\r\nimport { AppHeader } from './cmps/app-header';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"main-app\">\r\n      <AppHeader />\r\n      <main className='container'>\r\n        <Routes>\r\n          {routes.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              exact={true}\r\n              element={route.component}\r\n              path={route.path}\r\n            />\r\n          ))}\r\n        </Routes>\r\n        <AppFooter />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\bloomin\\frontend\\src\\store\\index.js",["230"],[],"\r\nimport { applyMiddleware, combineReducers, compose, legacy_createStore as createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { plantReducer } from './reducers/plant.reducer'\r\nimport { userReducer } from './reducers/user.reducer'\r\nimport { vaseReducer } from './reducers/vase.reducer'\r\nimport { accessoryReducer } from './reducers/accessory.reducer'\r\nimport { cartReducer } from './reducers/cart.reducer'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst rootReducer = combineReducers({\r\n    cartModule: cartReducer,\r\n    plantModule: plantReducer,\r\n    vaseModule: vaseReducer,\r\n    accessoryModule: accessoryReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\nwindow.gStore = store","C:\\bloomin\\frontend\\src\\routes.js",[],[],"C:\\bloomin\\frontend\\src\\cmps\\app-footer.jsx",[],[],"C:\\bloomin\\frontend\\src\\cmps\\app-header.jsx",["231"],[],"import { NavLink, useNavigate } from \"react-router-dom\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { loadPlants } from \"../store/actions/plant.actions\"\r\nimport { eventBusService } from '../services/event-bus.service'\r\n\r\nimport logo from '../assets/imgs/logo.png'\r\nimport searchIcon from '../assets/imgs/ic-actions-search.png'\r\nimport Blogo from '../assets/imgs/Blogo.png'\r\nimport { CartTotal } from \"./cartTotal\"\r\n\r\nexport function AppHeader() {\r\n\r\n    const dispatch = useDispatch()\r\n    const searchInputRef = useRef(null)\r\n    const sidenavRef = useRef(null)\r\n    const [name, setName] = useState('')\r\n    const [isNavOpen, setIsNavOpen] = useState(false)\r\n    const [isSearch, setisSearch] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    const onChangeFilter = () => {\r\n        dispatch(loadPlants())\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (searchInputRef.current && !searchInputRef.current.contains(event.target)) {\r\n                closeSearch()\r\n            }\r\n\r\n            if (sidenavRef.current && !sidenavRef.current.contains(event.target)) {\r\n                closeNav()\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"click\", handleClickOutside)\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleClickOutside)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        onChangeFilter({\r\n            name: name\r\n        })\r\n    }, [name])\r\n\r\n    function handleNameChange(event) {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const openSearch = () => {\r\n        setisSearch(true)\r\n        searchInputRef.current.focus()\r\n    }\r\n\r\n    const closeSearch = () => {\r\n        setisSearch(false)\r\n        setName('')\r\n    }\r\n\r\n    const openNav = () => {\r\n        setIsNavOpen(true)\r\n    }\r\n\r\n    const closeNav = () => {\r\n        setIsNavOpen(false)\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        console.log(event)\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        const filterBy = { name: name }\r\n        eventBusService.emit(\"nameChange\", filterBy)\r\n        navigate(`/shop?name=${name}`)\r\n        closeSearch()\r\n    }\r\n\r\n    const sidenavStyle = {\r\n        width: isNavOpen ? '128px' : '0'\r\n    }\r\n\r\n    const searchInput = {\r\n        display: isSearch ? 'inline-block' : 'none'\r\n    }\r\n\r\n    return (\r\n        <header className='app-header'>\r\n            <section className='header-container'>\r\n                <nav className=\"header-navigators\">\r\n                    <div className=\"header-large\">\r\n                        <ul className=\"navigators-container\">\r\n                            <div className=\"logo-container\">\r\n                                <NavLink className=\"header-logo\" to='/'><img src={logo} alt=\"logo\" /></NavLink>\r\n                            </div>\r\n                            <li><NavLink className=\"navigators assistant-reg-20pt\" to='/shop'>shop</NavLink></li>\r\n                            <li><NavLink className=\"navigators assistant-reg-20pt\" to='/match'>mix&match</NavLink></li>\r\n                            <li><NavLink className=\"navigators assistant-reg-20pt\" to='/contact'>contact</NavLink></li>\r\n                            <li><NavLink className=\"navigators assistant-reg-20pt\" to='/about'>info</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"header-med\" ref={sidenavRef}>\r\n                        <div id=\"mySidenav\" className=\"sidenav\" style={sidenavStyle}>\r\n                            <span className=\"closebtn\" onClick={() => closeNav()}>&#9776;</span>\r\n                            <NavLink className=\"char-style-2\" to='/shop'>Shop</NavLink>\r\n                            <NavLink className=\"char-style-2\" to='/match'>Mix&Match</NavLink>\r\n                            <NavLink className=\"char-style-2\" to='/contact'>Contact</NavLink>\r\n                            <NavLink className=\"char-style-2\" to='/about'>Info</NavLink>\r\n                            {/* <select className=\"lang-med\">\r\n                                    <option className=\"lang-opt\" value=\"english\">🇺🇸 English</option>\r\n                                    <option value=\"hebrew\">🇮🇱 עברית</option>\r\n                                </select> */}\r\n                            <NavLink to='/'><img className=\"nav-Blogo\" src={Blogo} alt=\"logo\" /></NavLink>\r\n                        </div>\r\n                        <span className=\"sidenav-openbtn\" onClick={() => openNav()}>&#9776;</span>\r\n\r\n                        <div className=\"med-logo-container\">\r\n                            <NavLink to='/'><img className=\"med-header-logo\" src={logo} alt=\"logo\" /></NavLink>\r\n                        </div>\r\n\r\n                        <ul className=\"header-opt-med\">\r\n                            <li>\r\n                                <CartTotal />\r\n                                <form\r\n                                    onSubmit={handleSubmit}\r\n                                    role=\"search\">\r\n                                    <label\r\n                                        className=\"search-icon\"\r\n                                        htmlFor=\"search\">\r\n                                        <img\r\n                                            style={{ display: isSearch ? 'none' : 'inline-block' }}\r\n                                            src={searchIcon}\r\n                                            alt=\"cart\">\r\n                                        </img>\r\n                                    </label>\r\n                                    <input\r\n                                        id=\"search\"\r\n                                        className=\"search-input\"\r\n                                        style={searchInput}\r\n                                        type=\"search\"\r\n                                        onClick={openSearch}\r\n                                        placeholder={`       Search`}\r\n                                        onChange={handleNameChange}\r\n                                        value={name}\r\n                                        ref={searchInputRef}\r\n                                        aria-label=\"Search products\"\r\n                                    />\r\n                                </form>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul className=\"header-opt\">\r\n                            <li>\r\n                                <form onSubmit={handleSubmit}\r\n                                    role=\"search\">\r\n                                    <label\r\n                                        className=\"search-icon\"\r\n                                        htmlFor=\"search\">\r\n                                        <img\r\n                                            src={searchIcon}\r\n                                            alt=\"cart\">\r\n                                        </img>\r\n                                    </label>\r\n                                    <input id=\"search\"\r\n                                        className=\"search-input\"\r\n                                        type=\"search\"\r\n                                        placeholder=\"       Search\"\r\n                                        onChange={handleNameChange}\r\n                                        value={name}\r\n                                        aria-label=\"Search products\"\r\n                                    />\r\n                                </form>\r\n                            </li>\r\n                            <li>\r\n                                <CartTotal />\r\n                            </li>\r\n\r\n                            {/* <li>\r\n                                    <select className=\"lang background-color4\">\r\n                                        <option value=\"english\">🇺🇸 English</option>\r\n                                        <option value=\"hebrew\">🇮🇱 עברית</option>\r\n                                    </select>\r\n                                </li> */}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </section>\r\n        </header >\r\n    )\r\n}","C:\\bloomin\\frontend\\src\\store\\reducers\\vase.reducer.js",[],[],"C:\\bloomin\\frontend\\src\\store\\reducers\\cart.reducer.js",["232","233"],[],"const INITIAL_STATE = {\r\n    items: [],\r\n    lastRemovedItem: null,\r\n    isLoading: false\r\n}\r\n\r\nexport function cartReducer(state = INITIAL_STATE, action) {\r\n    var updatedItem\r\n    switch (action.type) {\r\n        case 'SET_CART':\r\n            return {\r\n                ...state,\r\n                items: action.items\r\n            }\r\n        case 'ADD_TO_CART':\r\n            return {\r\n                ...state,\r\n                items: [...state.items, action.item],\r\n            }\r\n        case 'REMOVE_FROM_CART':\r\n            console.log(action.itemId)\r\n            const lastRemovedStay = state.items.find(\r\n                (item) => item._id === action.itemId\r\n            )\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item._id !== action.itemId)\r\n            }\r\n        case 'UNDO_REMOVE':\r\n            if (state.lastRemovedPlant) {\r\n                return {\r\n                    ...state,\r\n                    items: [...state.items, state.lastRemovedPlant],\r\n                    lastRemovedPlant: null,\r\n                }\r\n            }\r\n            return state;\r\n        case 'UPDATE_ITEM_IN_CART':\r\n            updatedItem = state.items.map((item) =>\r\n                item._id === action.item._id ? action.item : item\r\n            )\r\n            return {\r\n                ...state,\r\n                items: updatedItem\r\n            }\r\n        case 'CLEAR_CART':\r\n            return { ...state, items: [] }\r\n            break\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","C:\\bloomin\\frontend\\src\\store\\reducers\\accessory.reducer.js",[],[],"C:\\bloomin\\frontend\\src\\store\\reducers\\plant.reducer.js",["234"],[],"\r\nconst INITIAL_STATE = {\r\n    plants: [],\r\n    filterBy: {},\r\n    isLoading: true\r\n}\r\n\r\n\r\nexport function plantReducer(state = INITIAL_STATE, action) {\r\n\r\n    switch (action.type) {\r\n        case 'SET_PLANTS':\r\n            return {\r\n                ...state,\r\n                plants: action.plants\r\n            }\r\n\r\n        case 'ADD_PLANT':\r\n            return {\r\n                ...state,\r\n                plants: [...state.plants, action.plant]\r\n            }\r\n\r\n        case 'REMOVE_PLANT':\r\n            return {\r\n                ...state,\r\n                plants: state.plants.filter(plant => plant._id !== action.plantId)\r\n            }\r\n\r\n        case 'UPDATE_PLANT':\r\n            return {\r\n                ...state,\r\n                plants: state.plants.map(plant => plant._id === action.plant._id ? action.plant : plant)\r\n            }\r\n\r\n        case 'SET_FILTER_BY':\r\n            return {\r\n                ...state,\r\n                filterBy: { ...action.filterBy }\r\n            }\r\n        case 'SET_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n            break\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\bloomin\\frontend\\src\\store\\reducers\\user.reducer.js",[],[],"C:\\bloomin\\frontend\\src\\views\\cart.jsx",["235","236","237","238","239","240","241"],[],"import { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\nimport { loadCart, updateItem } from '../store/actions/cart.actions'\r\nimport React, { useCallback } from 'react';\r\nimport LoadingScreen from \"react-loading-screen\"\r\n\r\nimport addSym from '../assets/imgs/main/addSym.png'\r\nimport subSym from '../assets/imgs/main/subSym.png'\r\nimport trash from '../assets/imgs/main/ic-actions-trash.png'\r\n\r\nimport { Accessories } from \"../cmps/accessories\"\r\nimport { CartSummery } from '../cmps/cart-summary'\r\nimport { utilService } from '../services/util.service'\r\nimport { removeItem } from \"../store/actions/cart.actions\";\r\n\r\nexport function Cart() {\r\n\r\n    const { items, isLoading } = useSelector(state => state.cartModule)\r\n    const [quantities, setQuantities] = useState(\r\n        items.reduce((acc, item) => ({ ...acc, [item.name]: item.quantity }), {})\r\n    )\r\n    const [total, setTotal] = useState(0)\r\n    const [greeting, setGreeting] = useState(null)\r\n    const [id, setID] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(loadCart())\r\n    }, [dispatch, loadCart])\r\n\r\n    useEffect(() => {\r\n        let newTotal = 0\r\n        items.forEach((item) => {\r\n            newTotal += item.quantity\r\n        })\r\n        setTotal(newTotal)\r\n    }, [items, setTotal])\r\n\r\n\r\n    const onRemoveItem = useCallback(async (id) => {\r\n        setID(id)\r\n        dispatch(removeItem(id))\r\n    }, [dispatch, id])\r\n\r\n    \r\n    if (!items) return <LoadingScreen\r\n        loading={true}\r\n        bgColor=\"rgba(255,255,255,0.5)\"\r\n        spinnerColor=\"#4850b9\"\r\n        textColor=\"#676767\"\r\n        logoSrc=\"../logo.png\"\r\n        text=\"Loading\"\r\n    >\r\n        {\" \"}\r\n    </LoadingScreen>\r\n    return (\r\n        <section>\r\n            <h2>Shopping Cart</h2>\r\n            <div className='cart-container'>\r\n                <div className='cart-summery'>\r\n                    <CartSummery items={items} quantities={quantities} setQuantities={setQuantities} />\r\n                </div>\r\n                <table className='shopping-cart'>\r\n                    <thead>\r\n                        <tr className='cart-headings'>\r\n                            <th>Product</th>\r\n                            <th className='item-name'></th>\r\n                            <th>Amount</th>\r\n                            <th>Price</th>\r\n                            <th>Total</th>\r\n                            <th>Remove</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items.map(item => {\r\n                            return (\r\n                                <tr key={item.name + utilService.makeId()}>\r\n                                    <td ><img className='cart-item-img' src={item.pic} alt={item.name} /></td>\r\n                                    <td className='item-name'>{item.name}</td>\r\n                                    <td >\r\n                                        <div className='item-qunatity no-border'>\r\n                                            {quantities[item.name] > 1 ?\r\n                                                <img className='pointer' alt='-' src={subSym} onClick={() => {\r\n                                                    const newQuantity = quantities[item.name] - 1\r\n                                                    setQuantities({ ...quantities, [item.name]: newQuantity })\r\n                                                }} /> : <img className='deactive-btn' src={subSym} alt='-' />}\r\n                                            <p\r\n                                                onChange={(event) => {\r\n                                                    const newQuantity = Number(event.target.value)\r\n                                                    setQuantities({ ...quantities, [item.name]: newQuantity })\r\n                                                }}>{quantities[item.name]}</p>\r\n                                            <img alt='+' className='pointer' src={addSym} onClick={() => {\r\n                                                const newQuantity = quantities[item.name] + 1\r\n                                                setQuantities({ ...quantities, [item.name]: newQuantity })\r\n                                            }} />\r\n                                        </div>\r\n                                    </td>\r\n                                    <td >${item.price}</td>\r\n                                    <td >${item.price * item.quantity}</td>\r\n                                    <td ><img src={trash} className='remove-item' alt='remove-item' onClick={() => onRemoveItem(item._id)} /></td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className='cart-footer-buttons'>\r\n                <button>Greeting</button>\r\n                <button className='cart-buy-btn'>Buy</button>\r\n            </div>\r\n            <Accessories />\r\n        </section>\r\n    )\r\n}\r\n","C:\\bloomin\\frontend\\src\\views\\shop.jsx",["242","243","244"],[],"import { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { loadPlants, setFilterBy } from '../store/actions/plant.actions.js'\r\n\r\nimport { PlantList } from '../cmps/plants-list'\r\nimport { SearchFilter } from '../cmps/search-filter'\r\nimport LoadingScreen from \"react-loading-screen\"\r\n\r\nexport function Shop(props) {\r\n\r\n    const { plants, isLoading } = useSelector(state => state.plantModule)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [plantsPerPage, setPlantsPerPage] = useState(9)\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const [isFiltersOpen, setIsFiltersOpen] = useState(false)\r\n    const filtersRef = useRef(null)\r\n    const barRef = useRef(null)\r\n    const [isFirstLoad, setIsFirstLoad] = useState(true)\r\n    const [filters, setFilters] = useState({\r\n        name: '',\r\n        difficulty: '',\r\n        lightning: '',\r\n        watering: '',\r\n        priceRange: '',\r\n        locations: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('plants useEffect')\r\n        if (!plants || !plants.length) dispatch(loadPlants())\r\n    }, []);\r\n\r\n    const onChangeFilter = (filterBy) => {\r\n        console.log('is first load', isFirstLoad)\r\n        if (isFirstLoad) {\r\n            console.log('first load')\r\n            setIsFirstLoad(false)\r\n            return\r\n        }\r\n        console.log('filters changed', filters)\r\n        const queryParams = new URLSearchParams(location.search)\r\n        for (const key in filters) {\r\n            if (filters[key]) {\r\n                queryParams.set(key, filters[key])\r\n            } else {\r\n                queryParams.delete(key)\r\n            }\r\n        }\r\n        console.log('query params', queryParams.toString())\r\n        // navigate('/shop?' + queryParams.toString())\r\n        setFilters(filterBy)\r\n    }\r\n\r\n    const idxLastPlant = currentPage * plantsPerPage\r\n    const idxFirstPlant = idxLastPlant - plantsPerPage\r\n    const currentPlants = plants ? plants.slice(idxFirstPlant, idxLastPlant) : []\r\n\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(plants.length / plantsPerPage); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    const renderPageNums = pageNumbers.map(num => {\r\n        return (\r\n            <li\r\n                key={num}\r\n                id={num}\r\n                onClick={() => setCurrentPage(num)}\r\n                className={currentPage === num ? 'cur-page' : null}\r\n            >\r\n                {num}\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const handlePageChange = (event) => {\r\n        if (event.target.value === 'next' && currentPage < Math.ceil(plants.length / plantsPerPage)) {\r\n            setCurrentPage(currentPage + 1)\r\n        } else if (event.target.value === 'prev' && currentPage > 1) {\r\n            setCurrentPage(currentPage - 1)\r\n        }\r\n    }\r\n\r\n    const handleDropdown = (event) => {\r\n        setPlantsPerPage(event.target.value)\r\n        setCurrentPage(1)\r\n    }\r\n\r\n    // const handleFilters = () => {\r\n    //     setIsFiltersOpen(true)\r\n    // }\r\n\r\n    const openFilters = () => {\r\n        setIsFiltersOpen(true)\r\n    }\r\n\r\n\r\n    // const closeFilters = () => {\r\n    //     setIsFiltersOpen(false)\r\n    // }\r\n\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (barRef.current && !barRef.current.contains(event.target)\r\n                &&\r\n                !event.target.classList.contains('sidenav-openbtn')) {\r\n                setIsFiltersOpen(false);\r\n            }\r\n        }\r\n\r\n        document.addEventListener('click', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n\r\n    const handleResize = () => {\r\n        if (window.innerWidth > 750) {\r\n            setIsFiltersOpen(true)\r\n        } else {\r\n            setIsFiltersOpen(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    })\r\n\r\n    if (isLoading)\r\n        return <LoadingScreen\r\n            loading={true}\r\n            bgColor=\"rgba(255,255,255,0.5)\"\r\n            spinnerColor=\"#4850b9\"\r\n            textColor=\"#676767\"\r\n            logoSrc=\"../logo.png\"\r\n            text=\"Loading\"\r\n        >\r\n            {\" \"}\r\n        </LoadingScreen>\r\n\r\n\r\n    return (\r\n        <section className='main-shop-layout'>\r\n            <div>\r\n                <h2>shop</h2>\r\n            </div>\r\n            <div className='buttons-wraper'>\r\n                <button className=\"sidenav-openbtn\" onClick={() => openFilters()}>Filters</button>\r\n                <Link to='/shop/plant/edit/'>\r\n                    <button>Add Plant</button>\r\n                </Link>\r\n            </div>\r\n            <div className='shop-container'>\r\n                <div className='filter-display' style={{ display: isFiltersOpen ? 'block' : 'none' }} ref={barRef}>\r\n                    <SearchFilter onChangeFilter={onChangeFilter} ref={filtersRef} />\r\n                </div>\r\n                <PlantList plants={currentPlants} />\r\n            </div>\r\n            <div className='page-controls'>\r\n                <ul id=\"page-numbers\" className='pagination'>\r\n                    <button value=\"prev\" onClick={(ev) => handlePageChange(ev)}>⬅️ prev </button>\r\n                    <span className='page-nums'> Page: {renderPageNums} </span>\r\n                    <button value=\"next\" onClick={(ev) => handlePageChange(ev)}> next ➡️ </button>\r\n                </ul>\r\n                <label htmlFor=\"ipp\">Item per page:\r\n                    <select onChange={handleDropdown}>\r\n                        <option value=\"9\">9</option>\r\n                        <option value=\"30\">30</option>\r\n                        <option value=\"50\">50</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n","C:\\bloomin\\frontend\\src\\views\\bloom-app.jsx",["245","246","247"],[],"C:\\bloomin\\frontend\\src\\views\\contact.jsx",[],[],"C:\\bloomin\\frontend\\src\\views\\match.jsx",[],[],"C:\\bloomin\\frontend\\src\\views\\about.jsx",["248","249"],[],"import { NavLink, Outlet } from \"react-router-dom\"\r\n\r\nexport function About() {\r\n    return (\r\n        <section className=\"about\">\r\n            <section className=\"title-container\">\r\n                <h2>About us and plants</h2>\r\n                <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nulla minus explicabo ipsum necessitatibus cupiditate facere corrupti, praesentium tempora molestias, accusantium repellendus, in quasi. Iste labore maxime, vitae nulla odit sint.</p>\r\n            </section>\r\n\r\n            <nav>\r\n                {/* <NavLink replace to='/about/team'>Team</NavLink> */}\r\n                {/* <NavLink replace to='/about/vision'>Vision</NavLink> */}\r\n            </nav>\r\n\r\n            <section>\r\n                {/* <Route path='/about/team' component={Team} />\r\n                <Route path='/about/vision' component={Vision} /> */}\r\n                {/* <Outlet /> */}\r\n\r\n            </section>\r\n\r\n\r\n            <section>\r\n                <h1>stset</h1>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n","C:\\bloomin\\frontend\\src\\views\\plant-details.jsx",["250"],[],"C:\\bloomin\\frontend\\src\\views\\plant-edit.jsx",["251","252","253","254"],[],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm'\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { plantService } from '../services/plant.service.js';\r\nimport { addPlant, updatePlant } from '../store/actions/plant.actions.js'\r\nimport { useDispatch } from 'react-redux';\r\nimport { utilService } from '../services/util.service';\r\n\r\nexport function Edit(props) {\r\n\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const [plant, handleChange, setPlant] = useForm(plantService.getEmptyPlant())\r\n\r\n    useEffect(() => {\r\n        const plantId = params.id\r\n        if (!plantId) return\r\n        plantService.getById(plantId)\r\n            .then((plant) => {\r\n                setPlant(plant)\r\n            })\r\n            .catch((err) => {\r\n                console.log('err:', err)\r\n            })\r\n            console.log(plant, plantId)\r\n    }, [])\r\n\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        acceptedFiles.forEach((file, index) => {\r\n            const reader = new FileReader();\r\n            reader.onabort = () => console.log(\"file reading was aborted\");\r\n            reader.onerror = () => console.log(\"file reading has failed\");\r\n            reader.onload = () => {\r\n                setImages((prevState) => ({\r\n                    ...prevState,\r\n                    [index === 0 ? \"primary\" : index === 1 ? \"secondary\" : \"tertiary\"]: file,\r\n                }))\r\n            }\r\n            reader.readAsDataURL(file);\r\n        })\r\n    }, [])\r\n\r\n    // const { name, diameter, height, price, difficulty, about } = plant;\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n    const [images, setImages] = useState({\r\n        primary: null,\r\n        secondary: null,\r\n        tertiary: null,\r\n    })\r\n\r\n    const handleIncrement = (field) => {\r\n        setPlant((prevPlant) => ({\r\n            ...prevPlant,\r\n            [field]: prevPlant[field] + 1\r\n        }))\r\n    }\r\n\r\n    const handleDecrement = (field) => {\r\n        setPlant((prevPlant) => ({\r\n            ...prevPlant,\r\n            [field]: prevPlant[field] - 1\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        // event.preventDefault();\r\n        // const formData = new FormData();\r\n        // formData.append(\"name\", plant.name)\r\n        // formData.append(\"diameter\", plant.diameter)\r\n        // formData.append(\"height\", plant.height)\r\n        // formData.append(\"price\", plant.price)\r\n        // formData.append(\"difficulty\", plant.difficulty)\r\n        // formData.append(\"about\", plant.about)\r\n        // formData.append(\"primary\", images.primary)\r\n        // formData.append(\"secondary\", images.secondary)\r\n        // formData.append(\"tertiary\", images.tertiary)\r\n        if (plant._id) {\r\n            dispatch(updatePlant(plant)).then(() => {\r\n                navigate('/shop')\r\n            })\r\n        } else {\r\n            dispatch(addPlant(plant)).then(() => {\r\n                navigate('/shop')\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <main className=\"page-container\">\r\n            <div className=\"form-container\">\r\n                <form>\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input type=\"text\" id=\"name\" name=\"name\" maxLength={17} value={plant.name} onChange={handleChange} required />\r\n                    <div className=\"form-field\">\r\n                        <label htmlFor=\"diameter\">Diameter:</label>\r\n                        <div className=\"increment-decrement\">\r\n                            <button type=\"button\" onClick={() => handleDecrement('diameter')}>-</button>\r\n                            <input type=\"text\" id=\"diameter\" name=\"diameter\" value={plant.diameter} onChange={handleChange} required />\r\n                            <button type=\"button\" onClick={() => handleIncrement('diameter')}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <label htmlFor=\"height\">Height:</label>\r\n                        <div className=\"increment-decrement\">\r\n                            <button type=\"button\" onClick={() => handleDecrement('height')}>-</button>\r\n                            <input type=\"text\" id=\"height\" name=\"height\" value={plant.height} onChange={handleChange} required />\r\n                            <button type=\"button\" onClick={() => handleIncrement('height')}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <label htmlFor=\"price\">Price:</label>\r\n                        <div className=\"increment-decrement\">\r\n                            <button type=\"button\" onClick={() => handleDecrement('price')}>-</button>\r\n                            <input type=\"text\" id=\"price\" name=\"price\" value={plant.price} onChange={handleChange} required />\r\n                            <button type=\"button\" onClick={() => handleIncrement('price')}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor=\"difficulty\">Growing Difficulty:</label>\r\n                    <select id=\"difficulty\" name=\"difficulty\" value={plant.difficulty} onChange={handleChange} required>\r\n                        <option value=\"\">Select a Difficulty</option>\r\n                        <option value=\"Easy\">Easy</option>\r\n                        <option value=\"Medium\">Medium</option>\r\n                        <option value=\"Hard\">Hard</option>\r\n                        <option value=\"Pro\">Pro</option>\r\n                    </select>\r\n                    <label htmlFor=\"about\">About:</label>\r\n                    <textarea id=\"about\" name=\"about\" value={plant.about} onChange={handleChange} wrap=\"hard\" rows=\"6\" cols=\"100\" maxLength=\"300\" />\r\n                </form>\r\n            </div>\r\n            <div className=\"image-preview-container\">\r\n\r\n                <div className='main-preview-image' {...getRootProps()}>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"primary\"\r\n                        name=\"primary\"\r\n                        required\r\n                        onChange={(e) =>\r\n                            setImages((prevState) => ({\r\n                                ...prevState,\r\n                                primary: e.target.files[0],\r\n                            }))\r\n                        }\r\n                    />\r\n                    {images.primary ? (\r\n                        <img\r\n                            src={URL.createObjectURL(images.primary)}\r\n                            alt=\"Preview\"\r\n                            className=\"preview-image\"\r\n                        />\r\n                    ) : (\r\n                        <p className=\"preview-text\">Drag and drop an image here, or click to select a file</p>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"secondary-preview-images\">\r\n\r\n                    <div className=\"secondary-preview-image\" {...getRootProps()}>\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"secondary\"\r\n                            name=\"secondary\"\r\n                            required\r\n                            onChange={(e) =>\r\n                                setImages((prevState) => ({\r\n                                    ...prevState,\r\n                                    secondary: e.target.files[0],\r\n                                }))\r\n                            }\r\n                        />\r\n                        {images.secondary ? (\r\n                            <img\r\n                                src={URL.createObjectURL(images.secondary)}\r\n                                alt=\"Preview\"\r\n                                className=\"preview-image\"\r\n                            />\r\n                        ) : (\r\n                            <p className=\"preview-text\">Drag and drop an image here, or click to select a file</p>\r\n                        )}\r\n\r\n                    </div>\r\n\r\n                    <div className=\"secondary-preview-image\" {...getRootProps()}>\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"tertiary\"\r\n                            name=\"tertiary\"\r\n                            required\r\n                            onChange={(e) =>\r\n                                setImages((prevState) => ({\r\n                                    ...prevState,\r\n                                    tertiary: e.target.files[0],\r\n                                }))\r\n                            }\r\n                        />\r\n                        {images.tertiary ? (\r\n                            <img\r\n                                src={URL.createObjectURL(images.tertiary)}\r\n                                alt=\"Preview\"\r\n                                className=\"preview-image\"\r\n                            />\r\n                        ) : (\r\n                            <p className=\"preview-text\">Drag and drop an image here, or click to select a file</p>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='submit-button'>\r\n                    <button onClick={() => handleSubmit()}>Submit</button>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\n","C:\\bloomin\\frontend\\src\\cmps\\cartTotal.jsx",[],[],"C:\\bloomin\\frontend\\src\\services\\event-bus.service.js",[],[],"C:\\bloomin\\frontend\\src\\store\\actions\\plant.actions.js",[],[],[],"C:\\bloomin\\frontend\\src\\services\\plant.service.js",["255","256","257","258","259","260","261"],[],"C:\\bloomin\\frontend\\src\\services\\util.service.js",[],[],"C:\\bloomin\\frontend\\src\\store\\actions\\cart.actions.js",["262"],[],"import { cartService } from \"../../services/cart.service.js\"\r\nimport { showSuccessMsg, showErrorMsg, showUserMsg } from '../../services/event-bus.service.js'\r\n\r\n// Action Creators\r\nexport function getActionRemoveItem(itemId) {\r\n    console.log('reducer remove', itemId)\r\n    return { type: 'REMOVE_FROM_CART', itemId }\r\n}\r\n\r\nexport function getActionAddItem(item) {\r\n    console.log('getActionAddItem')\r\n    console.log(item)\r\n    return {\r\n        type: 'ADD_TO_CART',\r\n        item,\r\n    }\r\n}\r\n\r\nexport function getActionUpdateItem(item) {\r\n    console.log('getActionUpdateItem')\r\n    console.log(item)\r\n    return {\r\n        type: 'UPDATE_ITEM_IN_CART',\r\n        item,\r\n    }\r\n}\r\n\r\nexport function loadCart() {\r\n    return async (dispatch) => {\r\n        const items = await cartService.query()\r\n            .then(items => {\r\n                dispatch({ type: 'SET_CART', items })\r\n            })\r\n            .catch(err => {\r\n                console.log('err:', err)\r\n            })\r\n        }\r\n    }\r\n\r\nexport function addItem(item) {\r\n    console.log('addCart(item):', item)\r\n    return async (dispatch) => {\r\n        try {\r\n            const savedCart = await cartService.save(item)\r\n            console.log(savedCart)\r\n            dispatch(getActionAddItem(savedCart))\r\n            showSuccessMsg('Added to cart!')\r\n        } catch (err) {\r\n            showErrorMsg('Cannot add item')\r\n            console.log('Cannot add item', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateItem(item) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const savedItem = await cartService.save(item)\r\n            console.log('updated cart:', savedItem)\r\n            dispatch(getActionUpdateItem(savedItem))\r\n            showSuccessMsg('Cart updated')\r\n        } catch (error) {\r\n            showUserMsg('cant update cart')\r\n            console.log('cannot update cart', error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeItem(itemId) {\r\n    console.log(itemId)\r\n    return (dispatch, getState) => {\r\n        cartService.remove(itemId)\r\n            .then(() => {\r\n                dispatch({ type: 'REMOVE_FROM_CART', itemId })\r\n            })\r\n            .catch(err => {\r\n                console.log('err:', err)\r\n            })\r\n    }\r\n}\r\n\r\n","C:\\bloomin\\frontend\\src\\cmps\\accessories.jsx",["263","264"],[],"import { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport { loadAccessories } from '../store/actions/accessory.actions.js'\r\nimport { addItem } from '../store/actions/cart.actions.js';\r\n\r\n\r\nexport function Accessories() {\r\n\r\n    const { accessories, isLoading } = useSelector(state => state.accessoryModule)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(loadAccessories())\r\n    }, []);\r\n\r\n    const onAddToCart = (accessory) => {\r\n        dispatch(addItem({ ...accessory, quantity: 1 }))\r\n    }\r\n\r\n    if (!accessories) return <h2>loading accessories</h2>\r\n\r\n    return <>\r\n\r\n        <section className='accessories-container'>\r\n            <h2>Suggestion</h2>\r\n            <div className='accessory'>\r\n                {accessories.map(accessory => <div key={accessory.name}>\r\n                    <img src={accessory.pic} alt={accessory.name} key={accessory.name}></img>\r\n                    <p>{accessory.name}</p>\r\n                    <p>{accessory.price}</p>\r\n                    <button onClick={() => onAddToCart(accessory)}>Add to cart</button>\r\n                </div>\r\n                )}\r\n            </div>\r\n        </section>\r\n    </>\r\n}\r\n\r\n","C:\\bloomin\\frontend\\src\\cmps\\cart-summary.jsx",["265","266"],[],"import { useState, useEffect } from 'react';\r\nimport { utilService } from '../services/util.service.js';\r\n\r\nexport function CartSummery({ items, quantities }) {\r\n  const [currQuantity, setQuantity] = useState(0)\r\n  const [total, setTotal] = useState(0)\r\n\r\n  useEffect(() => {\r\n    let newTotal = 0;\r\n    items.forEach((item) => {\r\n      const itemTotal = item.price * quantities[item.name];\r\n      newTotal += itemTotal;\r\n    });\r\n    setTotal(newTotal);\r\n  }, [items, quantities]);\r\n\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"summery-container\">\r\n        <h2>Summery</h2>\r\n        <div>\r\n          <div className=\"coupon-form\">\r\n            <label htmlFor=\"animal\">Have a Coupon?</label>\r\n            <input\r\n              pattern=\"[a-z]{2,20}\"\r\n              type=\"text\"\r\n              id=\"coupon\"\r\n              name=\"coupon\"\r\n              defaultValue=\"Enter Coupon\"\r\n              size=\"50\"\r\n              maxLength=\"50\"\r\n            ></input>\r\n          </div>\r\n          <table className=\"summery-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Amount</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.map((item) => {\r\n                return (\r\n                  <tr key={item.name + utilService.makeId()}>\r\n                    <td>{item.name}</td>\r\n                    <td>{quantities[item.name]}</td>\r\n                    <td>${item.price * quantities[item.name]}</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"summery-total\">\r\n          <h2>Total</h2>\r\n          <h2>${total}</h2>\r\n        </div>\r\n        <button>Buy</button>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","C:\\bloomin\\frontend\\src\\cmps\\plants-list.jsx",[],[],"C:\\bloomin\\frontend\\src\\cmps\\PlantCarousel.jsx",["267"],[],"import React from 'react';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nexport function PlantCarousel(props) {\r\n    const { plants, onAddToCart } = props;\r\n    const navigate = useNavigate()\r\n    const currPlants = plants.slice(0, 4)\r\n\r\n    const settings = {\r\n        // selectedItemSize: 10,\r\n        swipeable: true,\r\n        showThumbs: true,\r\n        showArrows: false,\r\n        showIndicators: false\r\n    }\r\n\r\n    const onClickItem = (id) => {\r\n        navigate(`/plant/${id}`)\r\n    }\r\n\r\n    if (!currPlants) return <h2>Loading</h2>\r\n    return (\r\n        <div className='med-plant-carousel'>\r\n            <Carousel {...settings} >\r\n                {currPlants.map((plant) => (\r\n                    <div key={plant.name + 'container'} className='med-pop-img-container' onClick={() => onClickItem(plant._id)}>\r\n                        <img src={plant.pic} alt='name'  />\r\n                        <p key={plant.name + 'para'}>{plant.name}</p>\r\n                        <p key={plant.name + plant.price}>{plant.price}</p>\r\n                        <button key={plant.name + 'button'} onClick={() => onAddToCart(plant)}>Add To Cart</button>\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n    );\r\n}\r\n","C:\\bloomin\\frontend\\src\\cmps\\search-filter.jsx",["268","269","270","271","272","273","274","275"],[],"import { useEffect, useState } from 'react'\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport debounce from 'lodash/debounce'\r\nimport { useDispatch } from 'react-redux';\r\nimport ReactSlider from 'react-slider'\r\nimport { eventBusService } from '../services/event-bus.service'\r\nimport queryString from 'query-string'\r\nimport { set } from 'lodash';\r\n\r\n\r\nexport function SearchFilter() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [filters, setFilters] = useState({\r\n        name: null,\r\n        location: {\r\n            Home: false,\r\n            Office: false,\r\n            Balcony: false,\r\n            Yard: false,\r\n        },\r\n        difficulty: null,\r\n        lightning: null,\r\n        watering: null,\r\n        priceRange: {\r\n            min: 0,\r\n            max: 1000,\r\n        },\r\n    })\r\n\r\n    // create useEffect that will run on every change of the filters state\r\n    // it will check if the filters have changed and if so, it will set the url query params with the new filters\r\n    useEffect(() => {\r\n        console.log('filters changed', filters)\r\n        const queryParams = new URLSearchParams()\r\n        for (const key in filters) {\r\n            console.log('key', key)\r\n            if (key === 'location') {\r\n                for (const locationKey in filters.location) {\r\n                    if (filters.location[locationKey]) {\r\n                        queryParams.set(`location.${locationKey}`, filters.location[locationKey])\r\n                    }\r\n                }\r\n            } else if (key === 'priceRange') {\r\n                console.log('priceRange', filters.priceRange)\r\n                queryParams.set(`priceRange.min`, filters.priceRange.min)\r\n                queryParams.set(`priceRange.max`, filters.priceRange.max)\r\n            } else {\r\n                if (filters[key]) {\r\n                    console.log('key2', key)\r\n                    queryParams.set(key, filters[key])\r\n                }\r\n            }\r\n        }\r\n        const searchParams = queryParams.toString()\r\n        const url = searchParams ? `/shop?${searchParams}` : '/shop'\r\n        console.log('url', url)\r\n        console.log('searchParams', searchParams)\r\n        console.log(searchParams ? `/shop?${searchParams}` : '/shop')\r\n        navigate(`/shop?${searchParams}`);\r\n    }, [filters])\r\n\r\n    function handleFilterChange(event, rangeType) {\r\n        const { name, type, value, checked } = event.target;\r\n        if (type === 'checkbox') {\r\n            setFilters((prevFilters) => ({\r\n                ...prevFilters,\r\n                location: {\r\n                    ...prevFilters.location,\r\n                    [name]: checked,\r\n                },\r\n            }))\r\n        } else if (type === 'radio') {\r\n            setFilters((prevFilters) => ({\r\n                ...prevFilters,\r\n                [name]: value,\r\n            }))\r\n        } else if (type === 'number') {\r\n            const { value } = event.target;\r\n            if (rangeType === 'priceRange.min') {\r\n                setFilters((prevFilters) => ({\r\n                    ...prevFilters,\r\n                    priceRange: {\r\n                        ...prevFilters.priceRange,\r\n                        min: Math.min(value, prevFilters.priceRange.max),\r\n                    },\r\n                }));\r\n            } else if (rangeType === 'priceRange.max') {\r\n                setFilters((prevFilters) => ({\r\n                    ...prevFilters,\r\n                    priceRange: {\r\n                        ...prevFilters.priceRange,\r\n                        max: Math.max(value, prevFilters.priceRange.min),\r\n                    },\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleResetFilters() {\r\n        setFilters({\r\n            name: null,\r\n            location: {\r\n                Home: false,\r\n                Office: false,\r\n                Balcony: false,\r\n                Yard: false,\r\n            },\r\n            difficulty: null,\r\n            lightning: null,\r\n            watering: null,\r\n            priceRange: {\r\n                min: 0,\r\n                max: 1000,\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <section className='filter-container'>\r\n            <h2>Location</h2>\r\n            <label>\r\n                <input\r\n                    type='checkbox'\r\n                    name='Home'\r\n                    checked={filters.location.Home}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                Home\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type='checkbox'\r\n                    name='Office'\r\n                    checked={filters.location.Office}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                Office\r\n            </label>\r\n            <label>\r\n                <input type=\"checkbox\"\r\n                    name=\"Balcony\"\r\n                    checked={filters.location.Balcony}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                Balcony\r\n            </label>\r\n            <label>\r\n                <input type=\"checkbox\"\r\n                    name=\"Yard\"\r\n                    checked={filters.location.Yard}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                Yard\r\n            </label>\r\n\r\n            <h2>Difficulty</h2>\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"difficulty\"\r\n                    value=\"Survivor\"\r\n                    checked={filters.difficulty === \"Survivor\"}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                Survivor\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"difficulty\"\r\n                    value=\"Amateur\"\r\n                    checked={filters.difficulty === \"Amateur\"}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                Amateur\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"difficulty\"\r\n                    value=\"Pro\"\r\n                    checked={filters.difficulty === \"Pro\"}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                Pro\r\n            </label>\r\n\r\n            <h2>Lightning</h2>\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"lightning\"\r\n                    value=\"Low\"\r\n                    checked={filters.lightning === \"Low\"}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                Low\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"lightning\"\r\n                    value=\"Medium\"\r\n                    checked={filters.lightning === \"Medium\"}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                Medium\r\n            </label>\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"lightning\"\r\n                    value=\"High\"\r\n                    checked={filters.lightning === \"High\"}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                High\r\n            </label>\r\n\r\n            <h2>Watering</h2>\r\n            <label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"watering\"\r\n                    value=\"Low\"\r\n                    checked={filters.watering === \"Low\"}\r\n                    onChange={handleFilterChange} />\r\n                Low\r\n            </label>\r\n            <label>\r\n                <input type=\"radio\"\r\n                    name=\"watering\"\r\n                    value=\"Medium\"\r\n                    checked={filters.watering === \"Medium\"}\r\n                    onChange={handleFilterChange} />\r\n                Medium\r\n            </label>\r\n            <label>\r\n                <input type=\"radio\"\r\n                    name=\"watering\"\r\n                    value=\"High\"\r\n                    checked={filters.watering === \"High\"}\r\n                    onChange={handleFilterChange} />\r\n                High\r\n            </label>\r\n\r\n            <h2>Price Range</h2>\r\n            <div className=\"price-container\">\r\n                <div className=\"price-input\">\r\n                    <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"1000\"\r\n                        value={filters.priceRange.min}\r\n                        onChange={(e) => handleFilterChange(e, 'priceRange.min')} // Pass the field name\r\n                    />\r\n                    <div className='separator'>-</div>\r\n                    <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"1000\"\r\n                        value={filters.priceRange.max}\r\n                        onChange={(e) => handleFilterChange(e, 'priceRange.max')} // Pass the field name\r\n                    />\r\n                </div>\r\n                {/* <div className='slider-container'>\r\n                    <ReactSlider\r\n                        className=\"horizontal-slider\"\r\n                        thumbClassName=\"slider-thumb\"\r\n                        trackClassName=\"slider-track\"\r\n                        value={[filters.priceRange.min, filters.priceRange.max]}\r\n                        ariaLabelledby={['first-slider-label', 'second-slider-label']}\r\n                        renderTrack={(props, state) => (\r\n                            <div\r\n                                {...props}\r\n                                className={`slider-track ${state.index === 1 ? \"track-before\" : \"track-after\"}`}\r\n                            />\r\n                        )}\r\n                        onChange={handleFilterChange}\r\n                        minDistance={50}\r\n                        min={0}\r\n                        max={1000}\r\n                        pearling={true}\r\n                    />\r\n                </div> */}\r\n            </div>\r\n            <button type=\"reset\" onClick={handleResetFilters}>Reset</button>\r\n        </section>\r\n    )\r\n}\r\n","C:\\bloomin\\frontend\\src\\cmps\\vases.jsx",["276","277"],[],"import { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\nimport { loadVases } from '../store/actions/vase.actions.js'\r\nimport LoadingScreen from \"react-loading-screen\"\r\n\r\nimport addSym from '../assets/imgs/main/addSym.png'\r\nimport subSym from '../assets/imgs/main/subSym.png'\r\nimport { addItem } from '../store/actions/cart.actions'\r\n\r\n\r\nexport function Vases(props) {\r\n\r\n    const { vases, isLoading } = useSelector(state => state.vaseModule)\r\n    const dispatch = useDispatch()\r\n\r\n    const [selectedVase, setSelectedVase] = useState(null)\r\n    const [quantity, setQuantity] = useState(0)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadVases())\r\n    }, [])\r\n\r\n\r\n    function handleChosenVase(vase) {\r\n        setSelectedVase(vase)\r\n        if (quantity < 1) setQuantity(1)\r\n    }\r\n\r\n    const onAddToCart = async () => {\r\n        await dispatch(addItem({ ...selectedVase, quantity }))\r\n        await dispatch(addItem({ ...props.plant, quantity }))\r\n    }\r\n\r\n    if (!vases) return <LoadingScreen\r\n        loading={true}\r\n        bgColor=\"rgba(255,255,255,0.5)\"\r\n        spinnerColor=\"#4850b9\"\r\n        textColor=\"#676767\"\r\n        logoSrc=\"../logo.png\"\r\n        text=\"Loading\"\r\n    >\r\n        {\" \"}\r\n    </LoadingScreen>\r\n\r\n    return <>\r\n        <div className='vases-container'>\r\n            {vases.map(vase => {\r\n                return (\r\n                    <img\r\n                        src={vase.pic}\r\n                        alt={vase.name}\r\n                        key={vase.name}\r\n                        onClick={() => handleChosenVase(vase)}\r\n                        className={vase === selectedVase ? 'checked' : 'unchecked'}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n        <div className='quantity-counter flex'>\r\n            <p>quantity</p>\r\n            <img alt='+' src={addSym} onClick={() => setQuantity(quantity + 1)} />\r\n            <p>{quantity}</p>\r\n            {\r\n                quantity > 1 ? <img alt='-' src={subSym} onClick={() => setQuantity(quantity - 1)} /> :\r\n                    <p></p>\r\n            }\r\n        </div>\r\n        <button onClick={onAddToCart}>Add to cart</button>\r\n    </>\r\n}\r\n","C:\\bloomin\\frontend\\src\\cmps\\details-FAQ.jsx",[],[],"C:\\bloomin\\frontend\\src\\hooks\\useForm.js",["278"],[],"import { useEffect, useState } from 'react'\r\n\r\nexport const useForm = (initialState, callBack) => {\r\n  const [fields, setFields] = useState(initialState)\r\n\r\n  useEffect(() => {\r\n    if (callBack) callBack(fields)\r\n  }, [fields])\r\n\r\n  const MAX_CHARS_PER_LINE = 100;\r\n\r\n  const handleChange = ({ target }) => {\r\n    const field = target.name;\r\n    let value = target.type === 'number' ? +target.value || '' : target.value;\r\n  \r\n    // split the value into an array of substrings with a maximum length of MAX_CHARS_PER_LINE\r\n    const substrings = value.match(new RegExp(`.{1,${MAX_CHARS_PER_LINE}}`, 'g'));\r\n  \r\n    // join the substrings with a newline character\r\n    value = substrings.join('\\n');\r\n  \r\n    setFields((prevFields) => ({ ...prevFields, [field]: value }));\r\n  }\r\n  \r\n\r\n  return [fields, handleChange, setFields]\r\n}\r\n","C:\\bloomin\\frontend\\src\\services\\async-storage.service.js",[],[],"C:\\bloomin\\frontend\\src\\services\\cart.service.js",["279","280"],[],"import { storageService } from \"./async-storage.service.js\"\r\nimport { utilService } from './util.service.js'\r\nimport { store } from '../store/index'\r\n\r\n// import { userService } from './user.service.js'\r\nimport {\r\n    getActionRemoveItem,\r\n    getActionAddItem,\r\n    getActionUpdateItem,\r\n} from '../store/actions/cart.actions.js'\r\n\r\nconst STORAGE_KEY = 'cart'\r\nconst cartChannel = new BroadcastChannel('cartChannel')\r\n\r\n    // import axios from \"axios\"\r\n\r\n    ; (() => {\r\n        cartChannel.addEventListener('message', (ev) => {\r\n            store.dispatch(ev.data)\r\n        })\r\n    })()\r\n\r\n\r\n\r\nexport const cartService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    getEmptyOrder,\r\n}\r\nwindow.cs = cartService\r\n\r\nasync function query() {\r\n    return storageService.query(STORAGE_KEY)\r\n}\r\n\r\nasync function remove(itemId) {\r\n    console.log(itemId)\r\n    await storageService.remove(STORAGE_KEY, itemId)\r\n    cartChannel.postMessage(getActionRemoveItem(itemId))\r\n}\r\n\r\nasync function save(item) {\r\n    var savedCart\r\n    console.log('item,', item)\r\n    // if (item._id) {\r\n    // savedCart = await storageService.put(STORAGE_KEY, item)\r\n    // cartChannel.postMessage(getActionUpdateItem(savedCart))\r\n    // } else {\r\n    // TODO: owner is set by the beckend\r\n    // plant.owner = userService.getLoggedinUser()\r\n    savedCart = await storageService.post(STORAGE_KEY, item)\r\n    cartChannel.postMessage(getActionAddItem(savedCart))\r\n    // }\r\n    return savedCart\r\n}\r\n\r\nfunction getById(id) {\r\n    return storageService.get(STORAGE_KEY, id)\r\n}\r\n\r\nfunction getEmptyOrder() {\r\n    return {\r\n        vendor: 'Susita-' + (Date.now() % 1000),\r\n        price: utilService.getRandomIntInclusive(1000, 9000),\r\n    }\r\n}\r\n\r\nconst demoData = []","C:\\bloomin\\frontend\\src\\store\\actions\\accessory.actions.js",["281","282"],[],"import { AccessoryService } from \"../../services/accessories.service.js\"\r\n\r\n\r\nexport function loadAccessories() {\r\n    return async (dispatch, getState) => {\r\n        const { filterBy } = getState() //.accessoryModule\r\n        const accessories = await AccessoryService.query()\r\n        .then(accessories => {\r\n            dispatch({ type: 'SET_ACCESSORY', accessories })\r\n        })\r\n        .catch(err => {\r\n            console.log('err:', err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function removeAccessory(accessoryId) {\r\n    return (dispatch, getState) => {\r\n        AccessoryService.remove(accessoryId)\r\n            .then(() => {\r\n                dispatch({ type: 'REMOVE_ACCESSORY', accessoryId })\r\n            })\r\n            .catch(err => {\r\n                console.log('err:', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function setFilterBy(filterBy) {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'SET_FILTER_BY_ACCESSORY', filterBy })\r\n    }\r\n}","C:\\bloomin\\frontend\\src\\store\\actions\\vase.actions.js",["283","284"],[],"import { vaseService } from \"../../services/vase.service\"\r\n\r\n\r\n\r\nexport function loadVases() {\r\n    // console.log('accessory action')\r\n    return async (dispatch, getState) => {\r\n        const { filterBy } = getState() //.accessoryModule\r\n        const vases = await vaseService.query()\r\n        .then(vases => {\r\n            dispatch({ type: 'SET_VASE', vases })\r\n        })\r\n        .catch(err => {\r\n            console.log('err:', err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function removeVase(vaseId) {\r\n    // return (dispatch, getState) => {\r\n    //     vaseService.remove(vaseId)\r\n    //         .then(() => {\r\n    //             dispatch({ type: 'REMOVE_ROBOT', vaseId })\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log('err:', err)\r\n    //         })\r\n    // }\r\n    console.log('removeVase')\r\n}\r\n\r\nexport function setFilterBy(filterBy) {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'SET_FILTER_BY_VASE', filterBy })\r\n    }\r\n}","C:\\bloomin\\frontend\\src\\cmps\\plant-preview.jsx",["285"],[],"C:\\bloomin\\frontend\\src\\services\\accessories.service.js",[],[],"C:\\bloomin\\frontend\\src\\services\\vase.service.js",["286","287"],[],"import { storageService } from \"./async-storage.service.js\"\r\nimport { utilService } from './util.service.js'\r\nimport { store } from '../store/index'\r\n// import { userService } from './user.service.js'\r\nimport {\r\n  removeVase,\r\n//   getActionAddStay,\r\n//   getActionUpdateStay,\r\n} from '../store/actions/vase.actions.js'\r\n\r\nconst STORAGE_KEY = 'vases'\r\nconst vaseChannel = new BroadcastChannel('vaseChannel')\r\n\r\n\r\n; (() => {\r\n  vaseChannel.addEventListener('message', (ev) => {\r\n      store.dispatch(ev.data)\r\n  })\r\n})()\r\n\r\nfunction insertDemoData() {\r\n  storageService.postMany(STORAGE_KEY, demoVases)\r\n}\r\n\r\nexport const vaseService = {\r\n  query,\r\n  getById,\r\n  // save,\r\n  // remove,\r\n    // getEmptyAccessory,\r\n  }\r\n\r\n  window.cs = vaseService\r\n  \r\nasync function query(filterBy) {\r\n\r\n    var vases = await storageService.query(STORAGE_KEY)\r\n    if (!vases || !vases.length) {\r\n        // console.log('vases data missing')\r\n        insertDemoData()\r\n        // console.log(' vases data loaded')\r\n    }\r\n    // vases = vases.map(vase => {\r\n    //     vase.rate = (utilService.getRandomIntInclusive(11, 39) / 10)\r\n    //     console.log('vase mapped rate added', vase)\r\n    //     return vase\r\n    // })\r\n    // console.log('accesories', vases)\r\n    return vases\r\n    // let newAccessories = []\r\n    // if (filterBy) {\r\n    //     console.log('reg')\r\n    //     console.log(filterBy)\r\n    // } else {\r\n    //     console.log('elsed')\r\n    //     console.log(filterBy)\r\n    // }\r\n}\r\n\r\nfunction getById(id) {\r\n    return storageService.get(STORAGE_KEY, id)\r\n}\r\n\r\nconst demoVases = [{\r\n    \"_id\": \"36dece17-fcfb-4ede-8950-50cab02b28f8\",\r\n    \"name\": \"vase1\",\r\n    \"price\": \"16.68\",\r\n    \"pic\": \"https://iili.io/H1x5UDx.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"f9364362-9931-4b67-b83b-e1fb05b36b90\",\r\n    \"name\": \"vase2\",\r\n    \"price\": \"8.39\",\r\n    \"pic\": \"https://iili.io/H1x5SNj.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"c4e41ae4-2109-4485-9e50-888a8df05922\",\r\n    \"name\": \"vase3\",\r\n    \"price\": \"12.16\",\r\n    \"pic\": \"https://iili.io/H1x58Ab.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"7862fae6-afe9-4d4a-98d6-81dabde7d86c\",\r\n    \"name\": \"vase4\",\r\n    \"price\": \"8.12\",\r\n    \"pic\": \"https://iili.io/H1x5vHu.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"1c1a2300-d928-4858-9de4-7f83a4373759\",\r\n    \"name\": \"vase5\",\r\n    \"price\": \"16.31\",\r\n    \"pic\": \"https://iili.io/H1x5roQ.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"6864878b-b113-421e-98c8-0b0400f20be6\",\r\n    \"name\": \"vase6\",\r\n    \"price\": \"1.04\",\r\n    \"pic\": \"https://iili.io/H1x54VV.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"b8348a89-5fa9-4075-8cd3-7ed0bd08381a\",\r\n    \"name\": \"vase7\",\r\n    \"price\": \"4.20\",\r\n    \"pic\": \"https://iili.io/H1x56iB.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"2428ea62-ea1b-425d-8a9c-f29914a02c38\",\r\n    \"name\": \"vase8\",\r\n    \"price\": \"10.07\",\r\n    \"pic\": \"https://iili.io/H1x5iKP.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"3b652f4b-4e96-4e0d-a6be-dcd611b11c67\",\r\n    \"name\": \"vase9\",\r\n    \"price\": \"18.14\",\r\n    \"pic\": \"https://iili.io/H1x5sl1.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"5ac24976-301d-41a2-912b-ee99b71f7201\",\r\n    \"name\": \"vase10\",\r\n    \"price\": \"7.86\",\r\n    \"pic\": \"https://iili.io/H1x5LUF.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"791c5b78-ea10-4a0c-ad74-f08835053d83\",\r\n    \"name\": \"vase11\",\r\n    \"price\": \"9.43\",\r\n    \"pic\": \"https://iili.io/H1x5ZHg.png\",\r\n        // \"quantity\": null\r\n  }, {\r\n    \"_id\": \"514e6f29-bd02-4147-b200-b4ad3a7de953\",\r\n    \"name\": \"vase12\",\r\n    \"price\": \"3.02\",\r\n    \"pic\": \"https://iili.io/H1x5tRa.png\",\r\n        // \"quantity\": null\r\n  }]  \r\n","C:\\bloomin\\frontend\\src\\services\\http.service.js",[],[],{"ruleId":"288","severity":1,"message":"289","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":28},{"ruleId":"288","severity":1,"message":"292","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":48,"column":8,"nodeType":"295","endLine":48,"endColumn":14,"suggestions":"296"},{"ruleId":"288","severity":1,"message":"297","line":22,"column":19,"nodeType":"290","messageId":"291","endLine":22,"endColumn":34},{"ruleId":"298","severity":1,"message":"299","line":48,"column":13,"nodeType":"300","messageId":"301","endLine":48,"endColumn":18},{"ruleId":"298","severity":1,"message":"299","line":46,"column":13,"nodeType":"300","messageId":"301","endLine":46,"endColumn":18},{"ruleId":"288","severity":1,"message":"302","line":3,"column":20,"nodeType":"290","messageId":"291","endLine":3,"endColumn":30},{"ruleId":"288","severity":1,"message":"303","line":18,"column":20,"nodeType":"290","messageId":"291","endLine":18,"endColumn":29},{"ruleId":"288","severity":1,"message":"304","line":22,"column":12,"nodeType":"290","messageId":"291","endLine":22,"endColumn":17},{"ruleId":"288","severity":1,"message":"305","line":23,"column":12,"nodeType":"290","messageId":"291","endLine":23,"endColumn":20},{"ruleId":"288","severity":1,"message":"306","line":23,"column":22,"nodeType":"290","messageId":"291","endLine":23,"endColumn":33},{"ruleId":"293","severity":1,"message":"307","line":29,"column":8,"nodeType":"295","endLine":29,"endColumn":28,"suggestions":"308"},{"ruleId":"293","severity":1,"message":"309","line":43,"column":8,"nodeType":"295","endLine":43,"endColumn":22,"suggestions":"310"},{"ruleId":"288","severity":1,"message":"311","line":4,"column":22,"nodeType":"290","messageId":"291","endLine":4,"endColumn":33},{"ruleId":"288","severity":1,"message":"312","line":16,"column":11,"nodeType":"290","messageId":"291","endLine":16,"endColumn":19},{"ruleId":"293","severity":1,"message":"313","line":34,"column":8,"nodeType":"295","endLine":34,"endColumn":10,"suggestions":"314"},{"ruleId":"288","severity":1,"message":"303","line":18,"column":21,"nodeType":"290","messageId":"291","endLine":18,"endColumn":30},{"ruleId":"293","severity":1,"message":"315","line":24,"column":8,"nodeType":"295","endLine":24,"endColumn":30,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":72,"column":21,"nodeType":"319","endLine":72,"endColumn":58},{"ruleId":"288","severity":1,"message":"320","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":17},{"ruleId":"288","severity":1,"message":"321","line":1,"column":19,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"293","severity":1,"message":"322","line":29,"column":8,"nodeType":"295","endLine":29,"endColumn":10,"suggestions":"323"},{"ruleId":"288","severity":1,"message":"324","line":8,"column":10,"nodeType":"290","messageId":"291","endLine":8,"endColumn":21},{"ruleId":"293","severity":1,"message":"325","line":28,"column":8,"nodeType":"295","endLine":28,"endColumn":10,"suggestions":"326"},{"ruleId":"288","severity":1,"message":"327","line":47,"column":27,"nodeType":"290","messageId":"291","endLine":47,"endColumn":40},{"ruleId":"288","severity":1,"message":"328","line":47,"column":42,"nodeType":"290","messageId":"291","endLine":47,"endColumn":54},{"ruleId":"288","severity":1,"message":"329","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":24},{"ruleId":"288","severity":1,"message":"324","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":21},{"ruleId":"288","severity":1,"message":"330","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":15},{"ruleId":"288","severity":1,"message":"331","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":27},{"ruleId":"288","severity":1,"message":"332","line":4,"column":29,"nodeType":"290","messageId":"291","endLine":4,"endColumn":49},{"ruleId":"288","severity":1,"message":"333","line":4,"column":51,"nodeType":"290","messageId":"291","endLine":4,"endColumn":71},{"ruleId":"288","severity":1,"message":"334","line":111,"column":7,"nodeType":"290","messageId":"291","endLine":111,"endColumn":18},{"ruleId":"288","severity":1,"message":"335","line":30,"column":15,"nodeType":"290","messageId":"291","endLine":30,"endColumn":20},{"ruleId":"288","severity":1,"message":"303","line":9,"column":26,"nodeType":"290","messageId":"291","endLine":9,"endColumn":35},{"ruleId":"293","severity":1,"message":"336","line":14,"column":8,"nodeType":"295","endLine":14,"endColumn":10,"suggestions":"337"},{"ruleId":"288","severity":1,"message":"338","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":22},{"ruleId":"288","severity":1,"message":"339","line":5,"column":24,"nodeType":"290","messageId":"291","endLine":5,"endColumn":35},{"ruleId":"288","severity":1,"message":"340","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":14},{"ruleId":"288","severity":1,"message":"341","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":21},{"ruleId":"288","severity":1,"message":"342","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":16},{"ruleId":"288","severity":1,"message":"343","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":21},{"ruleId":"288","severity":1,"message":"344","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":19},{"ruleId":"288","severity":1,"message":"345","line":6,"column":10,"nodeType":"290","messageId":"291","endLine":6,"endColumn":25},{"ruleId":"288","severity":1,"message":"346","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":19},{"ruleId":"288","severity":1,"message":"347","line":8,"column":10,"nodeType":"290","messageId":"291","endLine":8,"endColumn":13},{"ruleId":"293","severity":1,"message":"348","line":62,"column":8,"nodeType":"295","endLine":62,"endColumn":17,"suggestions":"349"},{"ruleId":"288","severity":1,"message":"303","line":13,"column":20,"nodeType":"290","messageId":"291","endLine":13,"endColumn":29},{"ruleId":"293","severity":1,"message":"336","line":21,"column":8,"nodeType":"295","endLine":21,"endColumn":10,"suggestions":"350"},{"ruleId":"293","severity":1,"message":"351","line":8,"column":6,"nodeType":"295","endLine":8,"endColumn":14,"suggestions":"352"},{"ruleId":"288","severity":1,"message":"353","line":9,"column":5,"nodeType":"290","messageId":"291","endLine":9,"endColumn":24},{"ruleId":"288","severity":1,"message":"354","line":70,"column":7,"nodeType":"290","messageId":"291","endLine":70,"endColumn":15},{"ruleId":"288","severity":1,"message":"355","line":6,"column":17,"nodeType":"290","messageId":"291","endLine":6,"endColumn":25},{"ruleId":"288","severity":1,"message":"356","line":7,"column":15,"nodeType":"290","messageId":"291","endLine":7,"endColumn":26},{"ruleId":"288","severity":1,"message":"355","line":8,"column":17,"nodeType":"290","messageId":"291","endLine":8,"endColumn":25},{"ruleId":"288","severity":1,"message":"357","line":9,"column":15,"nodeType":"290","messageId":"291","endLine":9,"endColumn":20},{"ruleId":"358","severity":1,"message":"359","line":36,"column":89,"nodeType":"319","endLine":36,"endColumn":111},{"ruleId":"288","severity":1,"message":"324","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":21},{"ruleId":"288","severity":1,"message":"360","line":6,"column":3,"nodeType":"290","messageId":"291","endLine":6,"endColumn":13},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'userReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onChangeFilter'. Either include it or remove the dependency array.","ArrayExpression",["361"],"'lastRemovedStay' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'updateItem' is defined but never used.","'isLoading' is assigned a value but never used.","'total' is assigned a value but never used.","'greeting' is assigned a value but never used.","'setGreeting' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'loadCart'. Either exclude it or remove the dependency array. Outer scope values like 'loadCart' aren't valid dependencies because mutating them doesn't re-render the component.",["362"],"React Hook useCallback has an unnecessary dependency: 'id'. Either exclude it or remove the dependency array.",["363"],"'setFilterBy' is defined but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'plants'. Either include them or remove the dependency array.",["364"],"React Hook useEffect has an unnecessary dependency: 'loadPlants'. Either exclude it or remove the dependency array. Outer scope values like 'loadPlants' aren't valid dependencies because mutating them doesn't re-render the component.",["365"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'NavLink' is defined but never used.","'Outlet' is defined but never used.","React Hook useEffect has a missing dependency: 'loadPlant'. Either include it or remove the dependency array.",["366"],"'utilService' is defined but never used.","React Hook useEffect has missing dependencies: 'params.id', 'plant', and 'setPlant'. Either include them or remove the dependency array.",["367"],"'getInputProps' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'storageService' is defined but never used.","'store' is defined but never used.","'getActionAddPlant' is defined but never used.","'getActionRemovePlant' is defined but never used.","'getActionUpdatePlant' is defined but never used.","'STORAGE_KEY' is assigned a value but never used.","'items' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["368"],"'currQuantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'debounce' is defined but never used.","'useDispatch' is defined but never used.","'ReactSlider' is defined but never used.","'eventBusService' is defined but never used.","'queryString' is defined but never used.","'set' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["369"],["370"],"React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array. If 'callBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["371"],"'getActionUpdateItem' is defined but never used.","'demoData' is assigned a value but never used.","'filterBy' is assigned a value but never used.","'accessories' is assigned a value but never used.","'vases' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'removeVase' is defined but never used.",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"374","fix":"376"},{"desc":"377","fix":"378"},{"desc":"374","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"374","fix":"384"},{"desc":"385","fix":"386"},{"desc":"374","fix":"387"},{"desc":"388","fix":"389"},"Update the dependencies array to be: [name, onChangeFilter]",{"range":"390","text":"391"},"Update the dependencies array to be: [dispatch]",{"range":"392","text":"393"},{"range":"394","text":"393"},"Update the dependencies array to be: [dispatch, plants]",{"range":"395","text":"396"},{"range":"397","text":"393"},"Update the dependencies array to be: [loadPlant]",{"range":"398","text":"399"},"Update the dependencies array to be: [params.id, plant, setPlant]",{"range":"400","text":"401"},{"range":"402","text":"393"},"Update the dependencies array to be: [filters, navigate]",{"range":"403","text":"404"},{"range":"405","text":"393"},"Update the dependencies array to be: [callBack, fields]",{"range":"406","text":"407"},[1521,1527],"[name, onChangeFilter]",[1135,1155],"[dispatch]",[1468,1482],[1261,1263],"[dispatch, plants]",[1002,1024],[916,918],"[loadPlant]",[1024,1026],"[params.id, plant, setPlant]",[453,455],[2308,2317],"[filters, navigate]",[699,701],[219,227],"[callBack, fields]"]